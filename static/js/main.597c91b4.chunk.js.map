{"version":3,"sources":["Item/Item.styles.ts","Item/Item.tsx","App.styles.ts","CartItem/CartItem.styles.ts","CartItem/CartItem.tsx","Cart/Cart.styles.ts","Cart/Cart.tsx","App.tsx","index.tsx"],"names":["Wrapper","styled","div","Item","item","handleAddToCart","src","image","alt","title","description","price","Button","onClick","StyledButton","IconButton","CartItem","addToCart","removeFromCart","className","amount","toFixed","size","disableElevation","variant","id","aside","Cart","items","cartItems","length","map","reduce","acc","getProducts","a","fetch","json","App","useState","cartOpen","setCartOpen","setCartItems","useQuery","data","isLoading","error","console","log","clickedItem","prev","find","LinearProgress","Drawer","anchor","open","onClose","Badge","badgeContent","color","Grid","container","spacing","xs","sm","client","QueryClient","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.597c91b4.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  border: 1px solid lightblue;\r\n  border-radius: 20px;\r\n  height: 100%;\r\n\r\n  button {\r\n    border-radius: 0 0 20px 20px;\r\n\r\n  }\r\n\r\n  img {\r\n    max-height: 250px;\r\n    object-fit: scale-down;\r\n    border-radius: 20px 20px 0 0;\r\n    padding: 20px\r\n  }\r\n  div {\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    padding: 1rem;\r\n    height: 100%;\r\n  }\r\n`;","import Button from '@material-ui/core/Button'\r\nimport React from 'react'\r\nimport {CartItemType} from '../App'\r\nimport {Wrapper} from './Item.styles'\r\n\r\n\r\ntype Props = {\r\n  item: CartItemType;\r\n  handleAddToCart: (clickedItem: CartItemType) => void;\r\n\r\n\r\n}\r\nconst Item: React.FC<Props> = ({ item, handleAddToCart}) => (\r\n    <Wrapper>\r\n      <img src={item.image} alt={item.title}/>\r\n      <div>\r\n        <h3>{item.title}</h3>\r\n        <p>{item.description}</p>\r\n        <h3>${item.price}</h3>\r\n      </div>\r\n      <Button onClick={()=>handleAddToCart(item)}>ADD TO CART</Button>\r\n    </Wrapper>\r\n \r\n  )\r\n\r\n\r\nexport default Item;","import styled from 'styled-components'\r\nimport IconButton from '@material-ui/core/IconButton'\r\n\r\nexport  const Wrapper = styled.div`\r\n  margin: 40px;\r\n`;\r\n\r\nexport const StyledButton = styled(IconButton)`\r\n  position:fixed;\r\n  z-index: 100;\r\n  right: 20px;\r\n  top: 20px;\r\n`","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  border-bottom: 1px solid lightblue;\r\n  padding-bottom: 20px;\r\n\r\n  div {\r\n    flex: 1;\r\n  }\r\n\r\n  .information, .buttons {\r\n    display: flex;\r\n    justify-content: space-between\r\n\r\n  }\r\n\r\n  img {\r\n    max-width: 80px;\r\n    object-fit: cover;\r\n    margin-left: 40px;\r\n  }\r\n`;","import Button from '@material-ui/core/Button';\r\n\r\nimport { CartItemType } from '../App';\r\nimport { Wrapper} from './CartItem.styles';\r\n\r\ntype Props = {\r\n  item: CartItemType;\r\n  addToCart: (clickedItem: CartItemType) => void;\r\n  removeFromCart: (id: number) => void;\r\n}\r\n\r\nconst CartItem: React.FC<Props> = ({item, addToCart, removeFromCart }) => (\r\n <Wrapper>\r\n   <div>\r\n     <h3>{item.title}</h3>\r\n     <div className='information'>\r\n        <p>Price: ${item.price}</p>\r\n        <p>Total: ${(item.amount * item.price).toFixed(2)}</p>\r\n     </div>\r\n     <div className='buttons'>\r\n       <Button size='small' disableElevation variant='contained' onClick={() => removeFromCart(item.id)}> - </Button>\r\n       <p>{item.amount}</p>\r\n       <Button size='small' disableElevation variant='contained' onClick={() => addToCart(item)}> + </Button>\r\n     </div>\r\n    </div>\r\n    <img src={item.image} alt={item.title}/>\r\n </Wrapper>\r\n)\r\n\r\nexport default CartItem;","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.aside`\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  width: 500px;\r\n  padding: 20px;\r\n`;","import CartItem from '../CartItem/CartItem';\r\nimport { Wrapper } from './Cart.styles';\r\n\r\nimport { CartItemType } from '../App';\r\n\r\ntype Props = {\r\n  cartItems: CartItemType[];\r\n  addToCart: (clickedItem: CartItemType) => void;\r\n  removeFromCart: (id: number) => void;\r\n}\r\n\r\nconst Cart: React.FC<Props> = ({cartItems, addToCart, removeFromCart}) => {\r\n  const calculateTotal = (items: CartItemType[]) => {\r\n    return items.reduce((acc: number, item)=> acc + item.amount * item.price, 0)\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <h2>Your Shopping Cart</h2>\r\n      {cartItems.length === 0 ? <p>No items in cart.</p> : null}\r\n      {cartItems.map(item => (\r\n        <CartItem \r\n          key={item.id}\r\n          item={item}\r\n          addToCart = {addToCart}\r\n          removeFromCart = {removeFromCart}\r\n        />\r\n\r\n      ))}\r\n      <h2>Total: ${calculateTotal(cartItems).toFixed(2)}</h2>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Cart;","import { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport Item from './Item/Item';\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\nimport { StyledButton } from './App.styles';\nimport { Wrapper } from './App.styles';\nimport Cart from './Cart/Cart';\n\nexport type CartItemType = {\n  id: number;\n  category: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number;\n};\n\nconst getProducts = async (): Promise<CartItemType[]> =>\n  await (await fetch('https://fakestoreapi.com/products')).json();\n\nfunction App() {\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([] as CartItemType[]);\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\n    'products',\n    getProducts\n  );\n  console.log('data: ', data);\n\n  const getTotalItems = (items: CartItemType[]) =>\n    items.reduce((acc: number, item) => acc + item.amount, 0);\n  const handleAddToCart = (clickedItem: CartItemType) => {\n    setCartItems(prev => {\n      //is already in carttt\n      const isItemInCart = prev.find(item => item.id === clickedItem.id);\n\n      if (isItemInCart) {\n        return prev.map(item =>\n          item.id === clickedItem.id\n            ? { ...item, amount: item.amount + 1 }\n            : item\n        );\n      }\n\n      return [...prev, { ...clickedItem, amount: 1 }];\n    });\n  };\n  const handleRemoveFromCart = (id: number) => {\n    setCartItems(prev =>\n      prev.reduce((acc, item) => {\n        if (item.id === id) {\n          if (item.amount === 1) {\n            return acc;\n          }\n          return [...acc, { ...item, amount: item.amount - 1 }];\n        } else {\n          return [...acc, item];\n        }\n      }, [] as CartItemType[])\n    );\n  };\n  if (isLoading) return <LinearProgress />;\n  if (error) return <div>Something Went Wrong</div>;\n\n  return (\n    <Wrapper>\n      <Drawer anchor='right' open={cartOpen} onClose={() => setCartOpen(false)}>\n        <Cart\n          cartItems={cartItems}\n          addToCart={handleAddToCart}\n          removeFromCart={handleRemoveFromCart}\n        />\n      </Drawer>\n      <StyledButton onClick={() => setCartOpen(true)}>\n        <Badge badgeContent={getTotalItems(cartItems)} color='error'>\n          <AddShoppingCartIcon />\n        </Badge>\n      </StyledButton>\n      <Grid container spacing={3}>\n        {data?.map(item => (\n          <Grid item key={item.id} xs={12} sm={4}>\n            <Item item={item} handleAddToCart={handleAddToCart}></Item>\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport App from './App';\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <QueryClientProvider client={client}>\n    <App />\n  </QueryClientProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}